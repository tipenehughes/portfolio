[{"C:\\Users\\Laptop\\Desktop\\Current Website builds\\portfolio-react\\src\\index.js":"1","C:\\Users\\Laptop\\Desktop\\Current Website builds\\portfolio-react\\src\\App.js":"2","C:\\Users\\Laptop\\Desktop\\Current Website builds\\portfolio-react\\src\\Components\\Landing\\Landing.js":"3","C:\\Users\\Laptop\\Desktop\\Current Website builds\\portfolio-react\\src\\Components\\Footer\\Footer.js":"4","C:\\Users\\Laptop\\Desktop\\Current Website builds\\portfolio-react\\src\\Components\\Main\\Main.js":"5","C:\\Users\\Laptop\\Desktop\\Current Website builds\\portfolio-react\\src\\Components\\Main\\Article.js":"6","C:\\Users\\Laptop\\Desktop\\Current Website builds\\portfolio-react\\src\\Components\\Utilities\\Button.js":"7","C:\\Users\\Laptop\\Desktop\\Current Website builds\\portfolio-react\\src\\Components\\Main\\Portfolio\\ProjectContainer.js":"8","C:\\Users\\Laptop\\Desktop\\Current Website builds\\portfolio-react\\src\\Components\\Main\\Contact\\ContactForm.js":"9","C:\\Users\\Laptop\\Desktop\\Current Website builds\\portfolio-react\\src\\Components\\Main\\Portfolio\\ProjectItem.js":"10","C:\\Users\\Laptop\\Desktop\\Current Website builds\\portfolio-react\\src\\Components\\Navigation\\NavSocial\\NavSocial.js":"11","C:\\Users\\Laptop\\Desktop\\Current Website builds\\portfolio-react\\src\\Components\\Main\\About\\Technologies.js":"12","C:\\Users\\Laptop\\Desktop\\Current Website builds\\portfolio-react\\src\\Components\\Main\\About\\Tools.js":"13","C:\\Users\\Laptop\\Desktop\\Current Website builds\\portfolio-react\\src\\Components\\Main\\About\\Languages.js":"14","C:\\Users\\Laptop\\Desktop\\Current Website builds\\portfolio-react\\src\\Components\\Navigation\\NavBar\\NavBar.js":"15","C:\\Users\\Laptop\\Desktop\\Current Website builds\\portfolio-react\\src\\Components\\Navigation\\NavLinks\\NavLinks.js":"16","C:\\Users\\Laptop\\Desktop\\Current Website builds\\portfolio-react\\src\\Components\\Navigation\\MobileNav\\MobileNav.js":"17"},{"size":207,"mtime":1608048247940,"results":"18","hashOfConfig":"19"},{"size":1208,"mtime":1610493009531,"results":"20","hashOfConfig":"19"},{"size":1181,"mtime":1610492609054,"results":"21","hashOfConfig":"19"},{"size":590,"mtime":1610492948711,"results":"22","hashOfConfig":"19"},{"size":1114,"mtime":1608142627700,"results":"23","hashOfConfig":"19"},{"size":1349,"mtime":1610492992835,"results":"24","hashOfConfig":"19"},{"size":202,"mtime":1610492889368,"results":"25","hashOfConfig":"19"},{"size":2703,"mtime":1610581017283,"results":"26","hashOfConfig":"19"},{"size":9328,"mtime":1610492602192,"results":"27","hashOfConfig":"19"},{"size":2635,"mtime":1610581530787,"results":"28","hashOfConfig":"19"},{"size":1399,"mtime":1610492871496,"results":"29","hashOfConfig":"19"},{"size":1460,"mtime":1610492554746,"results":"30","hashOfConfig":"19"},{"size":946,"mtime":1610492569668,"results":"31","hashOfConfig":"19"},{"size":970,"mtime":1610492561705,"results":"32","hashOfConfig":"19"},{"size":2525,"mtime":1610493081661,"results":"33","hashOfConfig":"19"},{"size":607,"mtime":1610492854329,"results":"34","hashOfConfig":"19"},{"size":5351,"mtime":1610492867222,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"17325",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},"C:\\Users\\Laptop\\Desktop\\Current Website builds\\portfolio-react\\src\\index.js",[],["74","75"],"C:\\Users\\Laptop\\Desktop\\Current Website builds\\portfolio-react\\src\\App.js",[],"C:\\Users\\Laptop\\Desktop\\Current Website builds\\portfolio-react\\src\\Components\\Landing\\Landing.js",[],"C:\\Users\\Laptop\\Desktop\\Current Website builds\\portfolio-react\\src\\Components\\Footer\\Footer.js",[],"C:\\Users\\Laptop\\Desktop\\Current Website builds\\portfolio-react\\src\\Components\\Main\\Main.js",[],"C:\\Users\\Laptop\\Desktop\\Current Website builds\\portfolio-react\\src\\Components\\Main\\Article.js",[],"C:\\Users\\Laptop\\Desktop\\Current Website builds\\portfolio-react\\src\\Components\\Utilities\\Button.js",[],"C:\\Users\\Laptop\\Desktop\\Current Website builds\\portfolio-react\\src\\Components\\Main\\Portfolio\\ProjectContainer.js",[],"C:\\Users\\Laptop\\Desktop\\Current Website builds\\portfolio-react\\src\\Components\\Main\\Contact\\ContactForm.js",["76"],"import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faExclamationCircle,\r\n    faCheckCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nconst ContactForm = () => {\r\n    const toastSuccess = () => {\r\n        return toast(\"Great! We'll be in touch soon :)\", {\r\n            toastId: \"success\",\r\n        });\r\n    };\r\n    const toastError = () => {\r\n        return toast(\"Oops! Check your details and try again.\", {\r\n            toastId: \"error\",\r\n        });\r\n    };\r\n    const encode = (data) => {\r\n        return Object.keys(data)\r\n            .map(\r\n                (key) =>\r\n                    encodeURIComponent(key) +\r\n                    \"=\" +\r\n                    encodeURIComponent(data[key])\r\n            )\r\n            .join(\"&\");\r\n    };\r\n\r\n    // const nameError = touched.name && errors.name;\r\n    // const emailError = touched.email && errors.email;\r\n    // const messageError = touched.message && errors.message;\r\n\r\n    return (\r\n        <div className={styles.contactForm}>\r\n            <Formik\r\n                initialValues={{\r\n                    email: \"\",\r\n                    name: \"\",\r\n                    message: \"\",\r\n                }}\r\n                validationSchema={Yup.object({\r\n                    name: Yup.string()\r\n                        .max(15, \"Must be 15 characters or less\")\r\n                        .required(\"Required\"),\r\n                    email: Yup.string()\r\n                        .email(\"Invalid email address\")\r\n                        .required(\"Required\"),\r\n                    message: Yup.string()\r\n                        .max(120, \"Must be 120 characters or less\")\r\n                        .required(\"Required\"),\r\n                })}\r\n                onSubmit={(values, { setSubmitting, resetForm }) => {\r\n                    fetch(\"/\", {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                        },\r\n                        body: encode({\r\n                            \"form-name\": \"contact\",\r\n                            ...values,\r\n                        }),\r\n                    })\r\n                        .then(() => {\r\n                            toastSuccess();\r\n                            setSubmitting(false);\r\n                            console.log(values);\r\n                            resetForm();\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error);\r\n                            toastError();\r\n                            setSubmitting(false);\r\n                        });\r\n                }}\r\n            >\r\n                {({ errors, touched, isSubmitting }) => (\r\n                    <Form>\r\n                        <input type=\"hidden\" name=\"form-name\" value=\"contact\" />\r\n                        <div className={styles.form}>\r\n                            <div className={styles.formControl}>\r\n                                <label\r\n                                    htmlFor=\"name\"\r\n                                    className={styles.formLabel}\r\n                                >\r\n                                    Name\r\n                                </label>\r\n                                <Field\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    id=\"name\"\r\n                                    placeholder=\"Name\"\r\n                                    className={styles.formInput}\r\n                                />\r\n\r\n                                {touched.name && !errors.name && (\r\n                                    <FontAwesomeIcon\r\n                                        icon={faCheckCircle}\r\n                                        className={`${styles.formIcon} ${styles.formIconSuccess}`}\r\n                                    />\r\n                                )}\r\n                                {touched.name && errors.name && (\r\n                                    <>\r\n                                        <ErrorMessage\r\n                                            component={\"small\"}\r\n                                            className={styles.errorMessage}\r\n                                            name=\"name\"\r\n                                        />\r\n                                        <FontAwesomeIcon\r\n                                            icon={faExclamationCircle}\r\n                                            className={`${styles.formIcon} ${styles.formIconError}`}\r\n                                        />\r\n                                    </>\r\n                                )}\r\n                            </div>\r\n                            <div className={styles.formControl}>\r\n                                <label\r\n                                    htmlFor=\"email\"\r\n                                    className={styles.formLabel}\r\n                                >\r\n                                    Email\r\n                                </label>\r\n                                <Field\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    id=\"email\"\r\n                                    placeholder=\"Email\"\r\n                                    className={styles.formInput}\r\n                                />\r\n\r\n                                {touched.email && !errors.email && (\r\n                                    <FontAwesomeIcon\r\n                                        icon={faCheckCircle}\r\n                                        className={`${styles.formIcon} ${styles.formIconSuccess}`}\r\n                                    />\r\n                                )}\r\n                                {touched.email && errors.email && (\r\n                                    <>\r\n                                        <ErrorMessage\r\n                                            component={\"small\"}\r\n                                            className={styles.errorMessage}\r\n                                            name=\"email\"\r\n                                        />\r\n                                        <FontAwesomeIcon\r\n                                            icon={faExclamationCircle}\r\n                                            className={`${styles.formIcon} ${styles.formIconError}`}\r\n                                        />\r\n                                    </>\r\n                                )}\r\n                            </div>\r\n                            <div className={styles.formControl}>\r\n                                <label\r\n                                    htmlFor=\"message\"\r\n                                    className={styles.formLabel}\r\n                                >\r\n                                    Message\r\n                                </label>\r\n                                <Field\r\n                                    name=\"message\"\r\n                                    id=\"message\"\r\n                                    placeholder=\"Message\"\r\n                                    as=\"textarea\"\r\n                                    className={`${styles.formInput} ${styles.formTextarea}`}\r\n                                />\r\n\r\n                                {touched.message && !errors.message && (\r\n                                    <FontAwesomeIcon\r\n                                        icon={faCheckCircle}\r\n                                        className={`${styles.formIcon} ${styles.formIconSuccess}`}\r\n                                    />\r\n                                )}\r\n                                {touched.message && errors.message && (\r\n                                    <>\r\n                                        <ErrorMessage\r\n                                            component={\"small\"}\r\n                                            className={styles.errorMessage}\r\n                                            name=\"message\"\r\n                                        />\r\n                                        <FontAwesomeIcon\r\n                                            icon={faExclamationCircle}\r\n                                            className={`${styles.formIcon} ${styles.formIconError}`}\r\n                                        />\r\n                                    </>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.submit}>\r\n                            <input\r\n                                type=\"submit\"\r\n                                value=\"Submit\"\r\n                                id=\"submitBtn\"\r\n                                className={styles.submitInput}\r\n                            />\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ContactForm;\r\n","C:\\Users\\Laptop\\Desktop\\Current Website builds\\portfolio-react\\src\\Components\\Main\\Portfolio\\ProjectItem.js",[],"C:\\Users\\Laptop\\Desktop\\Current Website builds\\portfolio-react\\src\\Components\\Navigation\\NavSocial\\NavSocial.js",[],"C:\\Users\\Laptop\\Desktop\\Current Website builds\\portfolio-react\\src\\Components\\Main\\About\\Technologies.js",[],"C:\\Users\\Laptop\\Desktop\\Current Website builds\\portfolio-react\\src\\Components\\Main\\About\\Tools.js",[],"C:\\Users\\Laptop\\Desktop\\Current Website builds\\portfolio-react\\src\\Components\\Main\\About\\Languages.js",[],"C:\\Users\\Laptop\\Desktop\\Current Website builds\\portfolio-react\\src\\Components\\Navigation\\NavBar\\NavBar.js",["77"],"import React, { useState, useEffect } from \"react\";\r\nimport NavLinks from \"../NavLinks/NavLinks\";\r\nimport NavSocial from \"../NavSocial/NavSocial\";\r\nimport MobileNav from \"../MobileNav/MobileNav\";\r\nimport styles from \"./NavBar.module.css\";\r\n\r\nconst NavBar = () => {\r\n    const [navScroll, setNavScroll] = useState(\"\");\r\n    const [mobileMenu, setMobileMenu] = useState(false);\r\n    const [width, setWidth] = useState(window.innerWidth);\r\n\r\n    // To set screen width for mobile menu and NavLinks\r\n    const handleResize = () => {\r\n        setWidth(window.innerWidth);\r\n    };\r\n    // To set overflow hidden on body element when menu open to prevent scroll\r\n    const bodyScroll = () => {\r\n        mobileMenu === true\r\n            ? (document.body.style.overflow = \"hidden\")\r\n            : (document.body.style.overflow = null);\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", handleResize);\r\n        bodyScroll();\r\n    }, [mobileMenu]);\r\n\r\n    // To set state if NavBar grows\r\n    const scrollFunction = () => {\r\n        document.body.scrollTop > 80 || document.documentElement.scrollTop > 80\r\n            ? setNavScroll(\"scroll\")\r\n            : setNavScroll(\"\");\r\n    };\r\n    window.onscroll = () => {\r\n        scrollFunction();\r\n    };\r\n\r\n    // To set state if mobile menu is open\r\n    const handleSetMobileMenu = () => {\r\n        return !mobileMenu ? setMobileMenu(true) : setMobileMenu(false);\r\n    };\r\n\r\n    // Nav links\r\n    const navigationLinks = [\"About\", \"Portfolio\", \"Contact\"];\r\n\r\n    return (\r\n        <>\r\n            <nav className={`${styles.navBar} ${styles[navScroll]}`}>\r\n                <ul>\r\n                    {navigationLinks.map((links, index) => {\r\n                        return (\r\n                            <NavLinks\r\n                                input={links}\r\n                                navClass={\"navItem\"}\r\n                                key={index}\r\n                            />\r\n                        );\r\n                    })}\r\n                </ul>\r\n                <ul>\r\n                    <NavSocial\r\n                        socialClass={\"navSocial\"}\r\n                        socialIcons={\"socialIcons\"}\r\n                    />\r\n                </ul>\r\n            </nav>\r\n            <MobileNav\r\n                handleSetMobileMenu={handleSetMobileMenu}\r\n                menuOpen={mobileMenu}\r\n                width={width}\r\n                navigationLinks={navigationLinks}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\Laptop\\Desktop\\Current Website builds\\portfolio-react\\src\\Components\\Navigation\\NavLinks\\NavLinks.js",[],"C:\\Users\\Laptop\\Desktop\\Current Website builds\\portfolio-react\\src\\Components\\Navigation\\MobileNav\\MobileNav.js",["78"],"import React from \"react\";\r\nimport NavLinks from \"../NavLinks/NavLinks\";\r\nimport NavSocial from \"../NavSocial/NavSocial\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport styles from \"./MobileNav.module.css\";\r\n\r\nconst MobileNav = ({\r\n    handleSetMobileMenu,\r\n    menuOpen,\r\n    width,\r\n    navigationLinks,\r\n}) => {\r\n    // Mobile menu animations\r\n    const mobileMenu = {\r\n        closed: {\r\n            opacity: 0,\r\n            x: width,\r\n            transition: {\r\n                duration: 0.5,\r\n                type: \"ease\",\r\n            },\r\n        },\r\n        open: {\r\n            opacity: 1,\r\n            x: 0,\r\n            transition: {\r\n                duration: 0.5,\r\n                type: \"ease\",\r\n            },\r\n        },\r\n    };\r\n\r\n    // Nav link animations\r\n    const menuItems = {\r\n        closed: {\r\n            y: -75,\r\n            opacity: 0,\r\n            transition: {\r\n                duration: 0.1,\r\n                type: \"ease\",\r\n            },\r\n        },\r\n        open: {\r\n            y: 0,\r\n            opacity: 1,\r\n            transition: {\r\n                duration: 0.5,\r\n                type: \"ease\",\r\n                delay: 0.3,\r\n            },\r\n        },\r\n    };\r\n\r\n    // Menu button icon animations\r\n    const menuIcons = {\r\n        open: {\r\n            opacity: 1,\r\n            transition: {\r\n                duration: 0.3,\r\n            },\r\n        },\r\n        closed: {\r\n            opacity: 0,\r\n            transition: {\r\n                duration: 0.3,\r\n            },\r\n        },\r\n    };\r\n\r\n    return (\r\n        <nav className={styles.nav}>\r\n            <div className={styles.mobileNav}>\r\n                <motion.div\r\n                    className={styles.mobileNavOverlayHidden}\r\n                    variants={mobileMenu}\r\n                    inital={{ opacity: 0 }}\r\n                    animate={menuOpen ? \"open\" : \"closed\"}\r\n                    style={{ transform: `translateX(${width})` }}\r\n                >\r\n                    <motion.ul\r\n                        className={styles.mobileNavOptions}\r\n                        variants={menuItems}\r\n                        inital={{ opacity: 0 }}\r\n                        animate={menuOpen ? \"open\" : \"closed\"}\r\n                    >\r\n                        {navigationLinks.map((links, index) => {\r\n                            return (\r\n                                <NavLinks\r\n                                    className={styles.mobileNavOverlayHidden}\r\n                                    handleSetMobileMenu={handleSetMobileMenu}\r\n                                    navClass={\"mobileMenuItem\"}\r\n                                    input={links}\r\n                                    width={width}\r\n                                    key={index}\r\n                                />\r\n                            );\r\n                        })}\r\n                        <ul\r\n                            className={styles.mobileNavOverlayHidden}\r\n                            variants={mobileMenu}\r\n                            inital={\"open\"}\r\n                            animate={menuOpen ? \"open\" : \"closed\"}\r\n                            className={styles.socialContainer}\r\n                        >\r\n                            <NavSocial\r\n                                socialClass={\"\"}\r\n                                socialIcons={\"mobileSocialIcons\"}\r\n                            />\r\n                        </ul>\r\n                    </motion.ul>\r\n                </motion.div>\r\n                <button\r\n                    className={styles.mobileMenu}\r\n                    onClick={() => handleSetMobileMenu()}\r\n                    aria-label=\"Toggle menu\"\r\n                    aria-controls=\"mobileNavOverlayHidden\"\r\n                >\r\n                    {menuOpen ? (\r\n                        <AnimatePresence>\r\n                            <motion.div\r\n                                key=\"times\"\r\n                                initial={{ opacity: 0 }}\r\n                                variants={menuIcons}\r\n                                animate=\"open\"\r\n                                exit=\"closed\"\r\n                            >\r\n                                <FontAwesomeIcon\r\n                                    icon={[\"fas\", \"times\"]}\r\n                                    className={styles.icon}\r\n                                />\r\n                            </motion.div>\r\n                        </AnimatePresence>\r\n                    ) : (\r\n                        <AnimatePresence>\r\n                            <motion.div\r\n                                key=\"bars\"\r\n                                initial={{ opacity: 0 }}\r\n                                variants={menuIcons}\r\n                                animate=\"open\"\r\n                                exit=\"closed\"\r\n                            >\r\n                                <FontAwesomeIcon\r\n                                    icon={[\"fas\", \"bars\"]}\r\n                                    className={styles.icon}\r\n                                />\r\n                            </motion.div>\r\n                        </AnimatePresence>\r\n                    )}\r\n                </button>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default MobileNav;\r\n",{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},{"ruleId":"87","severity":1,"message":"88","line":26,"column":8,"nodeType":"89","endLine":26,"endColumn":20,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":105,"column":29,"nodeType":"93","endLine":105,"endColumn":63},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'bodyScroll'. Either include it or remove the dependency array.","ArrayExpression",["96"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},"Update the dependencies array to be: [bodyScroll, mobileMenu]",{"range":"99","text":"100"},[949,961],"[bodyScroll, mobileMenu]"]